
// Generated 2023年1月17日 下午11:23:43 by Hibernate Tools 6.0.0.Alpha2

package com.g.sys.msg.model;

import java.time.LocalDateTime;
import java.util.List;
import javax.persistence.*;

import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;
import org.hibernate.annotations.GenericGenerator;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.g.commons.model.AbstractEntity;
import com.g.sys.att.model.AttachmentFile;

/**
 * SysMessage generated by hbm2java
 */
@Entity
@Table(name = "sys_message")
@DynamicInsert
@DynamicUpdate
public class SysMessage extends AbstractEntity implements java.io.Serializable {

    private Long id;
    private String subject;
    private String message;
    private Long senderId;
    private String senderName;
    private Long replyTo;
    private Byte hasAttachment;
    private LocalDateTime ctime;
    private LocalDateTime stime;
    private MessageStatus status;
    private List<SysMessageRecipient> recipients;
    private List<Long> recipientId;
    private List<AttachmentFile> files;

    public SysMessage() {
    }

    public SysMessage(Long id, String subject, Long senderId, String senderName) {
        this.id = id;
        this.subject = subject;
        this.senderId = senderId;
        this.senderName = senderName;
    }

    public SysMessage(Long id, String subject, String message, Long senderId, String senderName, Long replyTo, Byte hasAttachment, LocalDateTime ctime, LocalDateTime stime, MessageStatus status) {
        this.id = id;
        this.subject = subject;
        this.message = message;
        this.senderId = senderId;
        this.senderName = senderName;
        this.replyTo = replyTo;
        this.hasAttachment = hasAttachment;
        this.ctime = ctime;
        this.stime = stime;
        this.status = status;
    }

    @Id
    @Column(name = "id", unique = true, nullable = false)
    @GeneratedValue(
            generator = "snowflake_generator"
    )
    @GenericGenerator(
            name = "snowflake_generator",
            strategy = "com.g.commons.utils.HibernateSnowflakeGenerator"
    )
    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @Column(name = "subject", nullable = false, length = 100)
    public String getSubject() {
        return this.subject;
    }

    public void setSubject(String subject) {
        this.subject = subject;
    }

    @Column(name = "message")
    public String getMessage() {
        return this.message;
    }

    public void setMessage(String message) {
        this.message = message;
    }

    @Column(name = "sender_id", nullable = false)
    public Long getSenderId() {
        return this.senderId;
    }

    public void setSenderId(Long senderId) {
        this.senderId = senderId;
    }

    @Column(name = "sender_name", nullable = false, length = 50)
    public String getSenderName() {
        return this.senderName;
    }

    public void setSenderName(String senderName) {
        this.senderName = senderName;
    }

    @Column(name = "reply_to")
    public Long getReplyTo() {
        return this.replyTo;
    }

    public void setReplyTo(Long replyTo) {
        this.replyTo = replyTo;
    }

    @Column(name = "has_attachment")
    public Byte getHasAttachment() {
        return this.hasAttachment;
    }

    public void setHasAttachment(Byte hasAttachment) {
        this.hasAttachment = hasAttachment;
    }

    @Column(name = "ctime", length = 19)
    public LocalDateTime getCtime() {
        return this.ctime;
    }

    public void setCtime(LocalDateTime ctime) {
        this.ctime = ctime;
    }

    @Column(name = "stime", length = 19)
    public LocalDateTime getStime() {
        return this.stime;
    }

    public void setStime(LocalDateTime stime) {
        this.stime = stime;
    }

    @Column(name = "status")
    @Enumerated(EnumType.STRING)
    public MessageStatus getStatus() {
        return this.status;
    }

    public void setStatus(MessageStatus status) {
        this.status = status;
    }

    @OneToMany(cascade = CascadeType.REMOVE, orphanRemoval = true)
    @JoinColumn(name = "message_id")
    public List<SysMessageRecipient> getRecipients() {
        return recipients;
    }

    public void setRecipients(List<SysMessageRecipient> recipients) {
        this.recipients = recipients;
    }

    @Transient
    @JsonIgnore
    public List<Long> getRecipientId() {
        return recipientId;
    }

    public void setRecipientId(List<Long> recipientId) {
        this.recipientId = recipientId;
    }

    @Transient
    @JsonIgnore
    public List<AttachmentFile> getFiles() {
        return files;
    }

    public void setFiles(List<AttachmentFile> files) {
        this.files = files;
    }
}
